To understand the code read these classes first:

1. Tile
2. Piece
3. Alliance
4. //Board
5. Chess pieces e.g Knight
 -> We calculate the valid move offset by taking an example from img.png. if the knight is on
    position 35 it can move to position 29 and so on and so forth, there we can get legal
    offsets for the knight and for the rest of the pieces.
6. Move class for the attack(when we make move to attack) and major(start move)
7. Finish the pieces (read knight class first for comments)
    King - Moves one square in any direction.
    Queen - Moves any number of squares diagonally, horizontally, or vertically.
    Rook - Moves any number of squares horizontally or vertically.
    Bishop - Moves any number of squares diagonally.
    Knight - Moves in an ‘L-shape,’ two squares in a straight direction, and then one square perpendicular to that.
    Pawn - Moves one square forward, but on its first move, it can move two squares forward. It captures diagonally one square forward.

    **NOTE** EVERY PIECE CAN MOVE BACK EXCEPT PAWN SO WE HARD CODED THE DIRECTION IT MOVES. E.g. White -1. black +1

8. Board class (Takes time)
9. Player package

NOTE: We create a new Board everytime a move is legal, this is because our board class is immutable so we cannot mutate it.

10. Move class
